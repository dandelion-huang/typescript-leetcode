name: CI workflow

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

env:
    NODE_VERSION: 20.14.0
    PNPM_VERSION: 9.6.0

on:
    push:
        branches: main
    pull_request:
        branches: '**'
    workflow_dispatch:

jobs:
    init:
        name: Initial Common Steps
        runs-on: ubuntu-latest
        outputs:
            cache-hit: ${{ steps.cache.outputs.cache-hit }}

        steps:
            - name: Git checkout
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Cache dependencies
              id: cache
              uses: actions/cache@v4
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}

            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: pnpm install --frozen-lockfile

    lint:
        name: Lint
        runs-on: ubuntu-latest
        needs: init

        steps:
            - name: Git checkout
              uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}

            - name: Install dependencies
              if: needs.init.outputs.cache-hit != 'true'
              run: pnpm install --frozen-lockfile

            - name: Run linters
              run: pnpm eslint:all
